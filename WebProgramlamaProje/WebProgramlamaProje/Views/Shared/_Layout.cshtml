@inject IStringLocalizer<BaseController> Localizer
@inject IHttpContextAccessor HttpContextAccessor
@using Microsoft.AspNetCore.Localization

@{


    var currentCulture = HttpContextAccessor.HttpContext?.Features.Get<IRequestCultureFeature>()?.RequestCulture?.Culture;
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - Web Programlama Proje</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet">

    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f8f9fa;
            padding: 20px;
        }

        .container {
            margin: 0 auto;
            max-width: 960px;
        }

        .flight-card {
            margin-bottom: 20px;
            background-color: #ffffff;
            border: 1px solid #ced4da;
            border-radius: 8px;
            overflow: hidden;
        }

        .card-body {
            padding: 20px;
        }

        .card-title {
            color: #007bff;
            font-size: 1.25rem;
            margin-bottom: 15px;
        }

        .list-group-item {
            border: none;
            padding: .75rem 0;
        }

        .btn-reserve {
            background-color: #007bff;
            color: #ffffff;
            text-decoration: none;
            padding: 10px 15px;
            border-radius: 5px;
            display: inline-block;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-default">
        <div class="container-fluid">
            <div class="navbar-header">
                <a class="navbar-brand" href="#">C-Bilet</a>
            </div>
            <ul class="nav navbar-nav">
                <li><a href="/Home/Index">@Localizer["navTickets"]</a></li>
                <li><a href="/Dashboard/Index">@Localizer["navFlights"]</a></li>

                @if (User.IsInRole("Admin"))
                {
                    <li><a href="/Admin/Index">@Localizer["navAdminPage"]</a></li>
                    <li><a href="/Admin/CreateFlight">@Localizer["navAddFlight"]</a></li>
                }
                @if (!string.IsNullOrEmpty(User.Identity.Name))
                {
                    <li><a href="/UserAuthentication/Logout">@Localizer["navLogOut"]</a></li>
                }
            </ul>
            <ul class="nav navbar-nav navbar-right">
                <li>

                    <div class="form-group">
                        <select name="culture" id="cultureSelect" class="form-control">
                            <option value="tr-TR">Türkçe</option>
                            <option value="en-US">English</option>
                        </select>
                    </div>
                </li>
            </ul>
        </div>
    </nav>
    <div class="container">
        @RenderBody()
    </div>
    @await RenderSectionAsync("Scripts", required: false)

    <script src="~/js/site.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>window.onload = function () {
            function getCookieValue(cookieName) {
                const name = cookieName + '=';
                const decodedCookie = decodeURIComponent(document.cookie);
                const cookieArray = decodedCookie.split(';');
                for (let i = 0; i < cookieArray.length; i++) {
                    let cookie = cookieArray[i];
                    while (cookie.charAt(0) === ' ') {
                        cookie = cookie.substring(1);
                    }
                    if (cookie.indexOf(name) === 0) {
                        return cookie.substring(name.length, cookie.length);
                    }
                }
                return 'tr-TR';
            }

            function setSelectValueFromCookie(selectId, cookieName) {
                const selectElement = document.getElementById(selectId);
                if (selectElement) {
                    const cookieValue = getCookieValue(cookieName);
                    if (cookieValue) {
                        selectElement.value = cookieValue;
                    }
                }
            }

            setSelectValueFromCookie('cultureSelect', 'SelectedCulture');
        };
        const langSelector = document.getElementById('cultureSelect')
        langSelector.addEventListener('change', function () {
            debugger
            const selectedLanguage = langSelector.value;
            document.cookie = 'SelectedCulture=' + selectedLanguage
            location.reload();
        })</script>
</body>
</html>

